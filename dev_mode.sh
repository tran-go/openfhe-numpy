#!/usr/bin/env bash

set -e  # Exit on any error

echo "=== Setting up OpenFHE-NumPy for development ==="

# Define paths
OPENFHE_DIR="/home/tango/x/work/share_dir/openfhe"
OPENFHE_PYTHON_DIR="/home/tango/x/work/share_dir/openfhe_python"
SHARE_DIR="/home/tango/x/work/share_dir"
DEV_DIR="$(pwd)/dev_build"  # Local development build directory

# Create development structure
mkdir -p "${DEV_DIR}/openfhe_numpy"

# Remove current directory from PYTHONPATH to avoid import conflicts
if [[ "$PYTHONPATH" == *"$(pwd)"* ]]; then
    echo "Removing source directory from PYTHONPATH to avoid import conflicts"
    PYTHONPATH=$(echo "$PYTHONPATH" | tr ':' '\n' | grep -v "^$(pwd)$" | tr '\n' ':' | sed 's/:$//')
fi

# Clean and rebuild PYTHONPATH (remove duplicates)
if [ -n "$PYTHONPATH" ]; then
    CLEANED_PATH=$(echo "$PYTHONPATH" | tr ':' '\n' | grep -v "$SHARE_DIR" | grep -v "$OPENFHE_PYTHON_DIR" | grep -v "$DEV_DIR" | tr '\n' ':' | sed 's/:$//')
    export PYTHONPATH="${DEV_DIR}:${SHARE_DIR}:${OPENFHE_PYTHON_DIR}:${CLEANED_PATH}"
else
    export PYTHONPATH="${DEV_DIR}:${SHARE_DIR}:${OPENFHE_PYTHON_DIR}"
fi

# Clean and rebuild LD_LIBRARY_PATH (remove duplicates)
if [ -n "$LD_LIBRARY_PATH" ]; then
    CLEANED_LD_PATH=$(echo "$LD_LIBRARY_PATH" | tr ':' '\n' | grep -v "${OPENFHE_DIR}/lib" | tr '\n' ':' | sed 's/:$//')
    export LD_LIBRARY_PATH="${OPENFHE_DIR}/lib:${CLEANED_LD_PATH}"
else
    export LD_LIBRARY_PATH="${OPENFHE_DIR}/lib"
fi

# Rebuild C++ extension
echo "=== Building C++ extension ==="
rm -rf build
mkdir -p build
cmake -S . -B build \
  -DWITH_CUSTOM_OPENFHE=ON \
  -DCUSTOM_OPENFHE_ROOT="${OPENFHE_DIR}" \
  -DCUSTOM_OPENFHE_PYTHON="${OPENFHE_PYTHON_DIR}" \
  -DCMAKE_BUILD_TYPE=Release

cmake --build build -j"$(nproc)"

# Sync Python package to development directory
echo "=== Setting up development Python package ==="
rsync -a --exclude="__pycache__" python/openfhe_numpy/ "${DEV_DIR}/openfhe_numpy/"

# Copy compiled extension to dev package
extension_path=$(find build -name "_onp_cpp*.so" | head -n 1)
if [ -n "$extension_path" ]; then
    cp "${extension_path}" "${DEV_DIR}/openfhe_numpy/"
    echo "Extension copied: $(basename "${extension_path}")"
else
    echo "Error: Couldn't find compiled extension"
    exit 1
fi

# Create version file
echo "Creating version file..."
cat > "${DEV_DIR}/openfhe_numpy/_version.py" << EOF
# Generated by dev_mode.sh
__version__ = "0.0.1-dev"
EOF

echo "=== Development setup complete! ==="
echo "PYTHONPATH: ${PYTHONPATH}"
echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}"
echo "Run tests with: python -m tests"

# Add dev_build to .gitignore if missing
if [ -f .gitignore ] && ! grep -q "dev_build" .gitignore; then
    echo -e "\n# Development build directory\ndev_build/" >> .gitignore
    echo "Added dev_build/ to .gitignore"
fi
